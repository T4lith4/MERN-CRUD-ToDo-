{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talitha\\\\Desktop\\\\MERN-CRUD-ToDo-\\\\client\\\\src\\\\components\\\\create-todo.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class CreateTodo extends Component {\n  constructor(props) {\n    super(props); //bind all of the functions which are going to assign the different values to the Todo\n\n    this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n    this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n    this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n    this.onSubmit = this.onSubmit.bind(this); //in the beginning, the state needs to be empty\n\n    this.state = {\n      todo_description: ' ',\n      todo_resposnsible: ' ',\n      todo_priority: ' '\n    };\n  } //as the input value for the description changes, update it through state to the current value the user enters in\n\n\n  onChangeTodoDescription(e) {\n    this.setState({\n      todo_description: e.target.value\n    });\n  } //as the input value for the prioritychanges, update it through state to the current value the user enters in\n\n\n  onChangeTodoPriority(e) {\n    this.setState({\n      todo_priority: e.target.value\n    });\n  } //as the input value for responsible changes, update it through state to the current value the user enters in\n\n\n  onChangeTodoResponsible(e) {\n    this.setState({\n      todo_responsible: e.target.value\n    });\n  } //on submission of the form, we use e.preventDefault() to prevent the componenet from unnecassarily rerendering.\n  //we then alert the user that the todo has been created with the description name of the todo the user entered in.\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    alert(`${this.state.todo_description} has been created`); //newTodo needs to be set to accept the new states of the different values that make up the Todo.\n\n    const newTodo = {\n      todo_description: this.state.todo_description,\n      todo_responsible: this.state.todo_responsible,\n      todo_priority: this.state.todo_priority\n    }; //axios is used to process a get request which passes in the values of the new todos.\n\n    axios.post('http://localhost:4000/todos/add', newTodo); //after submitting, clear the form inputs for a new submit\n\n    this.setState({\n      todo_description: ' ',\n      todo_responsible: ' ',\n      todo_priority: ' '\n    });\n    this.props.history.push('/');\n  } //this render methods needs to display a form with different inputs which have functions updating their values to state as they change.\n  //onSubmit passes the inputted values into the newTodo variable\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Create New Todo\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.setState.todo_description,\n      onChange: this.onChangeTodoDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Responsible: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.setState.todo_responsible,\n      onChange: this.onChangeTodoResponsible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Priority: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.setState.todo_priority,\n      onChange: this.onChangeTodoPriority,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Todo\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Talitha/Desktop/MERN-CRUD-ToDo-/client/src/components/create-todo.component.js"],"names":["React","Component","axios","CreateTodo","constructor","props","onChangeTodoDescription","bind","onChangeTodoPriority","onChangeTodoResponsible","onSubmit","state","todo_description","todo_resposnsible","todo_priority","e","setState","target","value","todo_responsible","preventDefault","alert","newTodo","post","history","push","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN,EADmB,CAEvB;;AACI,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BF,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB,CANmB,CAQvB;;AACA,SAAKI,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,GADT;AAETC,MAAAA,iBAAiB,EAAE,GAFV;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKC,GAfiD,CAiBlD;;;AACAR,EAAAA,uBAAuB,CAACS,CAAD,EAAI;AACvB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,gBAAgB,EAAEG,CAAC,CAACE,MAAF,CAASC;AADjB,KAAd;AAGH,GAtBiD,CAwBlD;;;AACAV,EAAAA,oBAAoB,CAACO,CAAD,EAAI;AACpB,SAAKC,QAAL,CAAc;AACVF,MAAAA,aAAa,EAAEC,CAAC,CAACE,MAAF,CAASC;AADd,KAAd;AAGH,GA7BiD,CA+BlD;;;AACAT,EAAAA,uBAAuB,CAACM,CAAD,EAAI;AACvB,SAAKC,QAAL,CAAc;AACVG,MAAAA,gBAAgB,EAAEJ,CAAC,CAACE,MAAF,CAASC;AADjB,KAAd;AAGH,GApCiD,CAsClD;AACA;;;AACAR,EAAAA,QAAQ,CAACK,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,KAAK,CAAE,GAAE,KAAKV,KAAL,CAAWC,gBAAiB,mBAAhC,CAAL,CAFQ,CAIV;;AACE,UAAMU,OAAO,GAAG;AACZV,MAAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWC,gBADjB;AAEZO,MAAAA,gBAAgB,EAAE,KAAKR,KAAL,CAAWQ,gBAFjB;AAGZL,MAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG;AAHd,KAAhB,CALQ,CAWR;;AACAZ,IAAAA,KAAK,CAACqB,IAAN,CAAW,iCAAX,EAA8CD,OAA9C,EAZQ,CAcR;;AACA,SAAKN,QAAL,CAAc;AACVJ,MAAAA,gBAAgB,EAAE,GADR;AAEVO,MAAAA,gBAAgB,EAAE,GAFR;AAGVL,MAAAA,aAAa,EAAE;AAHL,KAAd;AAKA,SAAKT,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,GA7DiD,CA8DlD;AACA;;;AACIC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAKjB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,SAAS,EAAC,cADjB;AAEO,MAAA,KAAK,EAAE,KAAKM,QAAL,CAAcJ,gBAF5B;AAGO,MAAA,QAAQ,EAAE,KAAKN,uBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,SAAS,EAAC,cADjB;AAEO,MAAA,KAAK,EAAE,KAAKU,QAAL,CAAcG,gBAF5B;AAGO,MAAA,QAAQ,EAAE,KAAKV,uBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,EAmBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,SAAS,EAAC,cADjB;AAEO,MAAA,KAAK,EAAE,KAAKO,QAAL,CAAcF,aAF5B;AAGO,MAAA,QAAQ,EAAE,KAAKN,oBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,EA4BY;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,aAA3B;AAAyC,MAAA,SAAS,EAAC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CA5BZ,CAHJ,CADJ;AAuCH;;AAxG6C","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n//bind all of the functions which are going to assign the different values to the Todo\r\n    this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n    this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n    this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n//in the beginning, the state needs to be empty\r\nthis.state = {\r\n    todo_description: ' ',\r\n    todo_resposnsible: ' ',\r\n    todo_priority: ' '\r\n    }\r\n}\r\n\r\n//as the input value for the description changes, update it through state to the current value the user enters in\r\nonChangeTodoDescription(e) {\r\n    this.setState({\r\n        todo_description: e.target.value\r\n    });\r\n}\r\n\r\n//as the input value for the prioritychanges, update it through state to the current value the user enters in\r\nonChangeTodoPriority(e) {\r\n    this.setState({\r\n        todo_priority: e.target.value\r\n    });\r\n}\r\n\r\n//as the input value for responsible changes, update it through state to the current value the user enters in\r\nonChangeTodoResponsible(e) {\r\n    this.setState({\r\n        todo_responsible: e.target.value\r\n    });\r\n}\r\n\r\n//on submission of the form, we use e.preventDefault() to prevent the componenet from unnecassarily rerendering.\r\n//we then alert the user that the todo has been created with the description name of the todo the user entered in.\r\nonSubmit(e) {\r\n    e.preventDefault();\r\n    alert(`${this.state.todo_description} has been created`);\r\n\r\n  //newTodo needs to be set to accept the new states of the different values that make up the Todo.\r\n    const newTodo = {\r\n        todo_description: this.state.todo_description,\r\n        todo_responsible: this.state.todo_responsible,\r\n        todo_priority: this.state.todo_priority\r\n    }\r\n\r\n    //axios is used to process a get request which passes in the values of the new todos.\r\n    axios.post('http://localhost:4000/todos/add', newTodo);\r\n        \r\n    //after submitting, clear the form inputs for a new submit\r\n    this.setState({\r\n        todo_description: ' ',\r\n        todo_responsible: ' ',\r\n        todo_priority: ' '\r\n    })\r\n    this.props.history.push('/');\r\n}\r\n//this render methods needs to display a form with different inputs which have functions updating their values to state as they change.\r\n//onSubmit passes the inputted values into the newTodo variable\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 20}}>\r\n                <h3>Create New Todo</h3>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label> Description: </label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.setState.todo_description}\r\n                               onChange={this.onChangeTodoDescription}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label> Responsible: </label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.setState.todo_responsible}\r\n                               onChange={this.onChangeTodoResponsible}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label> Priority: </label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.setState.todo_priority}\r\n                               onChange={this.onChangeTodoPriority}\r\n                        />\r\n                    </div>\r\n\r\n                            <div className=\"form-group\">\r\n                             <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\"/>\r\n                            </div>\r\n                     </form> \r\n                 </div>\r\n        \r\n             )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}